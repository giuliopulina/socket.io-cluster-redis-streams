version: '3.9'

x-socketio-base: &default-socket-io
    build: ./server
    expose:
      - "3000"
    links:
      - mongo1
      - mongo2
      - mongo3
      - mongosetup
      - pg-0
      - pg-1
    env_file:
      - path: ./server/node-variables.env
        required: true 
    networks:
      - node-webapp-network

x-mongo-base: &default-mongo
    image: mongo:6
    expose:
      - 27017
    networks:
      - node-webapp-network

services:
  haproxy:
    image: haproxy:1.7-alpine
    volumes:
      - ./haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
    links:
      - server-john
      - server-paul
      - server-george
      - server-ringo
    ports:
     - "3000:80"
    networks:
      - node-webapp-network
  
  server-john: 
    <<: *default-socket-io
    environment: 
      - NAME=John
      
  server-paul:
    <<: *default-socket-io
    environment: 
      - NAME=Paul
  
  server-george: 
    <<: *default-socket-io
    environment:
      - NAME=George
     
  server-ringo: 
    <<: *default-socket-io
    environment:
      - NAME=Ringo
  
  mongo1:
    <<: *default-mongo
    hostname: mongo1
    container_name: mongo1
    entrypoint: ["mongod", "--replSet", "myReplicaSet", "--bind_ip", "localhost,mongo1", "--port", "27017" ]

  mongo2:
    <<: *default-mongo
    hostname: mongo2
    container_name: mongo2
    entrypoint: ["mongod", "--replSet", "myReplicaSet", "--bind_ip", "localhost,mongo2", "--port", "27017"]
    
  mongo3:
    <<: *default-mongo
    hostname: mongo3
    container_name: mongo3
    entrypoint: ["mongod", "--replSet", "myReplicaSet", "--bind_ip", "localhost,mongo3" ,"--port", "27017"]
    
  mongosetup:
    image: mongo:6
    depends_on:
      - mongo1
      - mongo2
      - mongo3
    volumes:
      - ./mongo/mongo-setup.sh:/usr/local/etc/mongo/mongo-setup.sh
    restart: "no"
    command: [ "bash", "/usr/local/etc/mongo/mongo-setup.sh"]
    networks:
      - node-webapp-network
      
  pg-0:
    image: docker.io/bitnami/postgresql-repmgr:16
    expose:
      - 5432
    volumes:
      - pg_0_data:/bitnami/postgresql
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - POSTGRESQL_POSTGRES_PASSWORD=adminpassword
      - POSTGRESQL_USERNAME=socketio
      - POSTGRESQL_PASSWORD=socket
      - POSTGRESQL_DATABASE=socketiostorage
      - REPMGR_PASSWORD=repmgrpassword
      - REPMGR_PRIMARY_HOST=pg-0
      - REPMGR_PRIMARY_PORT=5432
      - REPMGR_PARTNER_NODES=pg-0,pg-1:5432
      - REPMGR_NODE_NAME=pg-0
      - REPMGR_NODE_NETWORK_NAME=pg-0
      - REPMGR_PORT_NUMBER=5432
    networks:
      - node-webapp-network
  pg-1:
    image: docker.io/bitnami/postgresql-repmgr:16
    expose:
      - 5432
    volumes:
      - pg_1_data:/bitnami/postgresql
    environment:
      - POSTGRESQL_POSTGRES_PASSWORD=adminpassword
      - POSTGRESQL_USERNAME=socketio
      - POSTGRESQL_PASSWORD=socket
      - POSTGRESQL_DATABASE=socketiostorage
      - REPMGR_PASSWORD=repmgrpassword
      - REPMGR_PRIMARY_HOST=pg-0
      - REPMGR_PRIMARY_PORT=5432
      - REPMGR_PARTNER_NODES=pg-0,pg-1:5432
      - REPMGR_NODE_NAME=pg-1
      - REPMGR_NODE_NETWORK_NAME=pg-1
      - REPMGR_PORT_NUMBER=5432
    networks:
      - node-webapp-network

networks:
  node-webapp-network:
    driver: bridge

volumes:
  pg_0_data:
    driver: local
  pg_1_data:
    driver: local